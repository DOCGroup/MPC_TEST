#----------------------------------------------------------------------------
#       Borland Makefile
#
# This file was automatically generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
#----------------------------------------------------------------------------
!ifdef DEBUG
OCFLAGS      = -v -y -Od -vi- -k -D_DEBUG
CFG_DIR      = Debug\\
LIBMODIFIER  = _bd
EXEMODIFIER  = 
POSTLINKRM   = .tds
!else
!ifdef RELEASE
OCFLAGS      = -O2 -DNDEBUG
CFG_DIR      = Release\\
LIBMODIFIER  = _br
EXEMODIFIER  = 
POSTLINKRM   = .tds
!else
!ifdef STATIC_DEBUG
OCFLAGS      = -v -y -Od -vi- -k -D_DEBUG
CFG_DIR      = Static_Debug\\
LIBMODIFIER  = _bsd
EXEMODIFIER  = 
STATIC_CFG   = 1
!else
!ifdef STATIC_RELEASE
OCFLAGS      = -O2 -DNDEBUG
CFG_DIR      = Static_Release\\
LIBMODIFIER  = _bsr
EXEMODIFIER  = 
STATIC_CFG   = 1
!else
!error You must define one of these valid configurations: DEBUG RELEASE STATIC_DEBUG STATIC_RELEASE
!endif
!endif
!endif
!endif

!ifdef UNICODE
UC_CFLAGS    = -WU
UNICODE_DIR  = Unicode\\
UC_MAIN      = w
ULIBMODIFIER = u
UEXEMODIFIER = u
!endif

!ifdef CODEGUARD
CG_CFLAGS = -vG
CG_LIB    = cg32.lib
!endif

VCL_CFLAGS     = -D_NO_VCL
STARTUP_LETTER = d
STARTUP_OBJ    = c0$(STARTUP_LETTER)32$(UC_MAIN)$(OBJ_EXT)

OBJ_EXT      = .obj
DLL_EXT      = .dll
LIB_EXT      = .lib
EXE_EXT      = .exe
CC           = bcc32
RC           = brcc32
LINK         = ilink32
TLIB         = tlib
THREADFLAGS  = -tWM
DLLFLAGS     = -Tpd -Gi -x -Gn -w-dup
LIBFLAGS     = /C
EXEFLAGS     = -Tpe -x -Gn
WARNFLAGS    = -w-rvl -w-rch -w-ccc -w-obs -w-aus -w-pia -w-inl
CCFLAGS      = -q -tWR -tWD

INTERMEDIATE = $(CFG_DIR)$(UNICODE_DIR)build_lib
NAME         = build_lib$(LIBMODIFIER)$(ULIBMODIFIER)
CPPDIR       = .;..\src;lower
RESDIR       = .;..\src

OBJFILES = \
           "$(INTERMEDIATE)\dotdot\src\foo$(OBJ_EXT)" \
           "$(INTERMEDIATE)\bar$(OBJ_EXT)" \
           "$(INTERMEDIATE)\lower\bar$(OBJ_EXT)"

LFLAGS   = \
           -v \
           -L"." -j"."

LIBFILES = \
           $(CG_LIB) import32.lib cw32mti.lib ws2_32.lib

!ifndef STATIC_CFG
RESOURCE = \
           $(INTERMEDIATE)\dotdot\src\bar.res

RC_FLAGS = \
        -i"."
!endif

# Borland precompiled headers can choke on some header files.
# Set NO_USE_PCH if you do not want to use precompiled headers.
!ifndef NO_USE_PCH
PCH_CFLAGS = \
             -DUSING_PCH \
             -H=$(INTERMEDIATE)\build_lib.csm -Hh=..\src\zzz_pch.h
!endif

CFLAGS = \
         -a8 \
         -DWIN32 \
         -D_WINDOWS \
         -I"." \
         $(PCH_CFLAGS) \
         $(VCL_CFLAGS)

!ifndef STATIC_CFG
OUTPUTDIR = .\\
all: $(OUTPUTDIR)$(NAME)$(DLL_EXT)

$(OUTPUTDIR)$(NAME)$(DLL_EXT): $(OBJFILES) $(RESOURCE)
	@if not exist "$(OUTPUTDIR)" mkdir "$(OUTPUTDIR)"
	$(LINK) @&&!
	$(DLLFLAGS) $(LFLAGS) $(STARTUP_OBJ) $(OBJFILES), $(OUTPUTDIR)$(NAME)$(DLL_EXT),, $(LIBFILES),, $(RESOURCE)
!
!endif

!ifdef STATIC_CFG
OUTPUTDIR = .\\
all: $(OUTPUTDIR)$(NAME)$(LIB_EXT)

$(OUTPUTDIR)$(NAME)$(LIB_EXT): $(OBJFILES)
	@if not exist "$(OUTPUTDIR)" mkdir "$(OUTPUTDIR)"
	$(TLIB) $(LIBFLAGS) $(OUTPUTDIR)$(NAME)$(LIB_EXT) @&&!
+ $(**: = &^
+ )
!
!endif

generated: $(GENERATED_DIRTY)
	@-rem

.path$(OBJ_EXT) = $(INTERMEDIATE)

.path.cpp = $(CPPDIR)
.cpp$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(DYN_FLAGS) $(STATIC_FLAGS) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.cxx = $(CPPDIR)
.cxx$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(DYN_FLAGS) $(STATIC_FLAGS) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.cc = $(CPPDIR)
.cc$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(DYN_FLAGS) $(STATIC_FLAGS) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.C = $(CPPDIR)
.C$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(DYN_FLAGS) $(STATIC_FLAGS) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.c = $(CPPDIR)
.c$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(DYN_FLAGS) $(STATIC_FLAGS) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

"$(INTERMEDIATE)\dotdot\src\foo$(OBJ_EXT)":
	@if not exist "$(INTERMEDIATE)\dotdot\src\" mkdir "$(INTERMEDIATE)\dotdot\src\"
	$(CC) $(DYN_FLAGS) $(STATIC_FLAGS) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) ..\src\foo.cpp

"$(INTERMEDIATE)\lower\bar$(OBJ_EXT)":
	@if not exist "$(INTERMEDIATE)\lower\" mkdir "$(INTERMEDIATE)\lower\"
	$(CC) $(DYN_FLAGS) $(STATIC_FLAGS) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) lower\bar.cpp

!ifndef STATIC_CFG
.path.res = $(INTERMEDIATE)

.path.rc = $(RESDIR)
.rc.res:
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(RC) $(RC_FLAGS) -fo$@ $<

"$(INTERMEDIATE)\dotdot\src\bar.res":
	@if not exist "$(INTERMEDIATE)\dotdot\src\" mkdir "$(INTERMEDIATE)\dotdot\src\"
	$(RC) -fo$@ ..\src\bar.rc

!endif

clean:
        @if exist "$(INTERMEDIATE)" rmdir /s/q $(INTERMEDIATE)

realclean: clean
        @del "$(OUTPUTDIR)$(NAME)$(DLL_EXT)" del "$(OUTPUTDIR)$(NAME)$(DLL_EXT)" 2>NUL
        @del "$(OUTPUTDIR)$(NAME)$(LIB_EXT)" del "$(OUTPUTDIR)$(NAME)$(LIB_EXT)" 2>NUL
        @del "$(OUTPUTDIR)$(NAME)$(POSTLINKRM)" 2>NUL


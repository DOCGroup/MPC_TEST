project: java {

  includes   += $(IDL2JNI_ROOT)/runtime $(JAVA_HOME)/include \
                $(JAVA_HOME)/include/$(JAVA_PLATFORM)
  libpaths   += $(IDL2JNI_ROOT)/lib
  libs       += idl2jni_runtime
  after      += idl2jni_runtime idl2jni_codegen

  // We're inheriting libout = $(ACE_ROOT)/lib from taolib_with_idl.mpb,
  // but there's no reason our libraries should be placed there.
  libout      = .

  javacflags += -classpath $(IDL2JNI_ROOT)/lib/i2jrt.jar


  // This Define_Custom makes use of $(IDL2JNI_ROOT)/modules/IDL2JNIHelper.pm

  // When this code is moved into DDS, IDL2JNIHelper.pm will go in to
  // $(DDS_ROOT)/MPC/modules and in all 3 versions of ACE+TAO,
  // $(ACE_ROOT)/bin/MakeProjectCreator/config/MPC.cfg will be edited to add
  // ", $DDS_ROOT/MPC" to the dynamic_types line and to remove
  // $DDS_ROOT/MPC/config from the includes line.

  // While this code is still outside of DDS, edit your MPC.cfg file in
  // $(ACE_ROOT)/bin/MakeProjectCreator/config so that the dynamic_types line
  // has ", $IDL2JNI_ROOT". 
  Define_Custom(Idl2Jni) {
    automatic_in  = 1
    automatic_out = 1
    inputext      = .idl
    command       = $(IDL2JNI_ROOT)/bin/idl2jni
    dependent     = $(IDL2JNI_ROOT)/bin/idl2jni
    libpath       = $(ACE_ROOT)/lib

    // The output from idl2jni does not follow the input file directory.  It
    // always goes in '.' or a sub-directory thereof.
    output_follows_input = 0

    keyword idl2jniflags = commandflags

    source_pre_extension = JC
    header_pre_extension = JC
    source_outputext     = .cpp
    header_outputext     = .h

    optional(source_pre_extension) {
      commandflags(!-SS) += JS
    }
    optional(header_pre_extension) {
      commandflags(!-SS) += JS
    }
  }
}

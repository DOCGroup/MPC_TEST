# The file ".wrmakefile" is the template used by the Wind River Workbench to
# generate the makefiles of this project. Add user-specific build targets and
# make rules only(!) in this project's ".wrmakefile" file. These will then be
# automatically dumped into the makefiles.

WIND_HOME := $(subst \,/,$(WIND_HOME))
ACE_ROOT := $(subst \,/,$(ACE_ROOT))
TAO_ROOT := $(subst \,/,$(TAO_ROOT))
CIAO_ROOT := $(subst \,/,$(CIAO_ROOT))
HOST_ROOT := $(subst \,/,$(HOST_ROOT))

ACE_EXE_EXT = $(if $(filter Linux-gnu-native-3.x-4.x,$(BUILD_SPEC)),)$(if $(filter Windows-gnu-native-3.x-4.x,$(BUILD_SPEC)),.exe)
ACE_TARGET_DIR ?= $(ACE_TARGET_NAME)
PROJECT_TARGET = CUSTOM_ONLY


all : generate_sources pre_build main_all post_build

_clean ::
	@echo "make: removing targets and objects of `pwd`"

%IDE_GENERATED%


-include $(PRJ_ROOT_DIR)/*.makefile

-include *.makefile

main_all : external_build
	@echo "make: built targets of `pwd`"


# entry point for extending the build
external_build ::
	@echo ""

# main entry point for pre processing prior to the build
pre_build :: $(PRE_BUILD_STEP)
	@echo "Create object list";\
	rm -f $(PRJ_ROOT_DIR)/filelist.txt;\
	for object in _dummy_ $(OBJECTS_); do\
		if [ "$$object" = "_dummy_" ]; then\
			continue ;\
		fi;\
		echo "$$object" >> $(PRJ_ROOT_DIR)/filelist.txt ;\
	done


# function for generating the correct Custom type Prerequisite (input or dep)
# using a ../ or ../../ prefix unless it's already an absolute path
CUST_PRE = $(if $(patsubst $%,,$(1:/%=)),../../)$(1)

# function for adding an exe_ext, if needed and the file exists
ADD_EXT = $(if $(ACE_EXE_EXT),$(if $(suffix $(1)),$(1),$(wildcard $(1) $(1)$(ACE_EXE_EXT))),$(1))

SPACE = $(should_be_unset) $(should_be_unset)
GENERATED_DIRTY = $(addprefix ../../, foo.cpp foo_script2.cpp)

# entry point for generating sources prior to the build
generate_sources :: $(GENERATED_DIRTY)


$(addprefix ../../,foo.cpp): $(foreach pre,foo.mco,$(call ADD_EXT,$(call CUST_PRE,$(pre))))
	$(TRACE_FLAG)cd ../.. ; echo "int main(){}" -a foo.mco > foo.cpp

$(addprefix ../../,foo_script2.cpp): $(foreach pre,foo.mco,$(call ADD_EXT,$(call CUST_PRE,$(pre))))
	$(TRACE_FLAG)cd ../.. ; echo "int main(){}" -b foo.mco > foo_script2.cpp

DIR_PREFIX = wb_mpc_test/$(BUILD_SPEC)

# main entry point for post processing after the build
post_build :: $(POST_BUILD_STEP) deploy_output
	@echo ""

# entry point for deploying output after the build
deploy_output :: 
	@echo ""


clean :: external_clean $(CLEAN_STEP) _clean

# entry point for extending the build clean
external_clean ::
	$(TRACE_FLAG)cd ../.. ; rm -f  foo.cpp
	$(TRACE_FLAG)cd ../.. ; rm -f  foo_script2.cpp
	@echo ""




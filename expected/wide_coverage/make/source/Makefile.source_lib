#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CXX           = g++
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -DUSING_PCH -D_REENTRANT -I"."
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"." -L"../lib"
CCC           = $(CXX)
MAKEFILE      = Makefile.source_lib
DEPENDENCIES  = .depend.$(MAKEFILE)
LTARGETDIR    = ../lib/
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
EXEEXT        = 
LIBPREFIX     = lib
LDLIBS        = -ldl -lpthread $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so)))))
OBJS          = source_lib_pch$(OBJEXT) TheCheat$(OBJEXT) creole/more_names$(OBJEXT) names$(OBJEXT) qwee$(OBJEXT)
AREXT         = .a
LIB           = $(LTARGETDIR)$(LIBPREFIX)source_lib$(AREXT)
GENFLAGS      = -O
SRC           = source_lib_pch.cpp TheCheat.cpp creole/more_names.cpp names.cpp qwee.cxx
LINK.cc       = $(LD) $(LDFLAGS)
EXPORTFLAGS   = $(STATICFLAGS)

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(LIB)

$(LTARGETDIR):
	@$(MKDIR) "$@"

$(LIB): $(LTARGETDIR) $(OBJS)
	$(AR) $(ARFLAGS) $(LIB) $(OBJS)

GENERATED_DIRTY    = creole/more_names.cpp creole/more_names.h names.cpp names.h TheCheat.cpp TheCheat.h ./bar.txt ./moop.hxx ./qwee.cxx ./qwee_T.C ./weer.inl
# These may be needed, but some versions of make do not accept this syntax
#DYLD_LIBRARY_PATH := $(DYLD_LIBRARY_PATH):../lib
#LD_LIBRARY_PATH   := $(LD_LIBRARY_PATH):../lib
#SHLIB_PATH        := $(SHLIB_PATH):../lib
#LIBPATH           := $(LIBPATH):../lib
#PATH              := $(PATH):../lib

creole/more_names.cpp creole/more_names.h: more_names.key ../bin/generator
	@$(MKDIR) creole
	../bin/generator -o creole more_names.key
	echo creole/more_names.cpp and creole/more_names.h have been generated.
	@echo '#include "source_lib_pch.h"' > temp.$$$$ && cat creole/more_names.cpp >> temp.$$$$ && mv temp.$$$$ creole/more_names.cpp

names.cpp names.h: names.key something ../bin/generator
	../bin/generator -n names names.key
	echo names.cpp and names.h have been generated.
	@echo '#include "source_lib_pch.h"' > temp.$$$$ && cat names.cpp >> temp.$$$$ && mv temp.$$$$ names.cpp

TheCheat.cpp TheCheat.h: TheCheat.r ../bin/cppgen.pl
	perl ../bin/cppgen.pl  -o "$@" TheCheat.r
	@echo '#include "source_lib_pch.h"' > temp.$$$$ && cat TheCheat.cpp >> temp.$$$$ && mv temp.$$$$ TheCheat.cpp

./bar.txt ./moop.hxx ./qwee.cxx ./qwee_T.C ./weer.inl: mondo/all.mondo ../mondo/mondo.pl ../mondo/modules/ReaderGen.pm
	@$(MKDIR) .
	perl ../mondo/mondo.pl  mondo/all.mondo
	@echo '#include "source_lib_pch.h"' > temp.$$$$ && cat ./qwee.cxx >> temp.$$$$ && mv temp.$$$$ ./qwee.cxx

.PRECIOUS: $(GENERATED_DIRTY)
$(OBJS): $(GENERATED_DIRTY)

generated: $(GENERATED_DIRTY)
	@-:

source_lib_pch$(OBJEXT): source_lib_pch.cpp
	$(COMPILE.cc) -o source_lib_pch.h.gch $(EXPORTFLAGS) source_lib_pch.cpp
	@$(CP) source_lib_pch.h.gch source_lib_pch$(OBJEXT)

TheCheat$(OBJEXT): TheCheat.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) TheCheat.cpp

creole/more_names$(OBJEXT): creole/more_names.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) creole/more_names.cpp

names$(OBJEXT): names.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) names.cpp

qwee$(OBJEXT): qwee.cxx
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) qwee.cxx

clean:
	-$(RM) $(OBJS)
	-$(RM) source_lib_pch.h.gch

realclean: clean
	-$(RM) $(SHLIB) $(LIB)
	-$(RM) $(GENERATED_DIRTY)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------

$(DEPENDENCIES):
	@touch $(DEPENDENCIES)

depend:
	-makedepend -Y $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

include $(DEPENDENCIES)

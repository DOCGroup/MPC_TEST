#----------------------------------------------------------------------------
#       Borland Makefile
#
# This file was automatically generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
#----------------------------------------------------------------------------
!ifdef DEBUG
OCFLAGS      = -v -y -Od -vi- -k -D_DEBUG
CFG_DIR      = Debug\\
ILIBMODIFIER = d
OLIBMODIFIER = 
EXEMODIFIER  = 
POSTLINKRM   = .tds
EXEOUTPUTDIR = .\\
!else
!ifdef RELEASE
OCFLAGS      = -O2 -DNDEBUG
CFG_DIR      = Release\\
ILIBMODIFIER = 
OLIBMODIFIER = 
EXEMODIFIER  = 
POSTLINKRM   = .tds
EXEOUTPUTDIR = Release\\
!else
!error You must define one of these valid configurations: Debug Release
!endif
!endif

!ifdef UNICODE
UC_CFLAGS    = -WU
UNICODE_DIR  = Unicode\\
UC_MAIN      = w
!endif

!ifdef CODEGUARD
CG_CFLAGS = -vG
CG_LIB    = cg32.lib
!endif

!ifdef CBX
OBJ_EXT      = .o
DLL_EXT      = .dll
LIB_EXT      = .a
EXE_EXT      = .exe
CC           = bccx
RC           = brcc32
LINK         = ilink
TLIB         = ar
THREADFLAGS  = -tWM
DLLFLAGS     = -Tpd -Gi -x -Gn -w-dup
LIBFLAGS     = cfrv
EXEFLAGS     = -Tpe -x -Gn
WARNFLAGS    = -w-rvl -w-rch -w-ccc -w-obs -w-aus -w-pia -w-inl
CCFLAGS      = -b -tWR -tWD
!else # BCC
OBJ_EXT      = .obj
DLL_EXT      = .dll
LIB_EXT      = .lib
EXE_EXT      = .exe
CC           = bcc32
RC           = brcc32
LINK         = ilink32
TLIB         = tlib
THREADFLAGS  = -tWM
DLLFLAGS     = -Tpd -Gi -x -Gn -w-dup
LIBFLAGS     = /C
EXEFLAGS     = -Tpe -x -Gn
WARNFLAGS    = -w-rvl -w-rch -w-ccc -w-obs -w-aus -w-pia -w-inl
CCFLAGS      = -q -tWR -tWD
!endif

INTERMEDIATE = $(CFG_DIR)$(UNICODE_DIR)source
NAME         = main_test$(EXEMODIFIER)
CPPDIR       = .;exe;exe\use_more_names;exe\use_names
RESDIR       = .

OBJFILES = \
           "$(INTERMEDIATE)\exe\main$(OBJ_EXT)" \
           "$(INTERMEDIATE)\exe\use_more_names\use_more_names$(OBJ_EXT)" \
           "$(INTERMEDIATE)\exe\use_names\use_names$(OBJ_EXT)"

LFLAGS   = \
           -v \
           -L"." -j"." \
           -L"..\lib" -j"..\lib"

LIBFILES = \
           source_lib$(ILIBMODIFIER)$(LIB_EXT) \
           $(CG_LIB) import32$(LIB_EXT) cw32mti.lib ws2_32.lib

CFLAGS = \
         $(PCH_CFLAGS) \
         -a8 \
         -DMACRO_TEST="a_string_with_no_spaces" \
         -DWIN32 \
         -D_WINDOWS \
         -D_NO_VCL \
         -I"." \
         $(DUMMY_VALUE_NOT_ENDING_IN_BACKSLASH)

OUTPUTDIR = $(EXEOUTPUTDIR)
all: $(OUTPUTDIR)$(NAME)$(EXE_EXT) __postbuild__

$(OUTPUTDIR)$(NAME)$(EXE_EXT): $(OBJFILES) $(RESOURCE)
	@if not exist "$(OUTPUTDIR)" mkdir "$(OUTPUTDIR)"
	$(LINK) @&&!
	$(EXEFLAGS) $(LFLAGS) c0x32$(UC_MAIN)$(OBJ_EXT) $(OBJFILES), $(OUTPUTDIR)$(NAME)$(EXE_EXT),, $(LIBFILES),, $(RESOURCE)
!

GENERATED_DIRTY = Foolish/foolish.txt
Foolish/foolish.txt: Foolish/foolish.simple
	echo Generated from > $@ Foolish/foolish.simple

$(OBJFILES): $(GENERATED_DIRTY)

generated: $(GENERATED_DIRTY)
	@-rem

.path$(OBJ_EXT) = $(INTERMEDIATE)

.path.cpp = $(CPPDIR)
.cpp$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.cxx = $(CPPDIR)
.cxx$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.cc = $(CPPDIR)
.cc$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.C = $(CPPDIR)
.C$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.c = $(CPPDIR)
.c$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

"$(INTERMEDIATE)\exe\main$(OBJ_EXT)":
	@if not exist "$(INTERMEDIATE)\exe\" mkdir "$(INTERMEDIATE)\exe\"
	$(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) exe\main.cpp

"$(INTERMEDIATE)\exe\use_more_names\use_more_names$(OBJ_EXT)":
	@if not exist "$(INTERMEDIATE)\exe\use_more_names\" mkdir "$(INTERMEDIATE)\exe\use_more_names\"
	$(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) exe\use_more_names\use_more_names.cpp

"$(INTERMEDIATE)\exe\use_names\use_names$(OBJ_EXT)":
	@if not exist "$(INTERMEDIATE)\exe\use_names\" mkdir "$(INTERMEDIATE)\exe\use_names\"
	$(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) exe\use_names\use_names.cpp

clean:
	if exist "$(INTERMEDIATE)" rmdir /s/q $(INTERMEDIATE)

realclean: clean
	if exist "Foolish/foolish.txt" del Foolish/foolish.txt
	if exist "$(OUTPUTDIR)$(NAME)$(EXE_EXT)" del $(OUTPUTDIR)$(NAME)$(EXE_EXT)
        if exist "$(OUTPUTDIR)$(NAME)$(POSTLINKRM)" del $(OUTPUTDIR)$(NAME)$(POSTLINKRM)

__postbuild__:
	@echo main_test has been built


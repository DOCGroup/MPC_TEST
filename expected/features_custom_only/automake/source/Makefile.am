##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## /tao_builds/chad/ocitao/ACE_wrappers/build/linux/bin/mwc.pl -include config -type automake features_custom_only.mwc


## Makefile.fco.am

BUILT_SOURCES = \
  zar_thatA.cpp \
  zar_thatA.h \
  zar_thatA.inl \
  zar_thatB.cpp \
  zar_thatB.h \
  zar_thatB.inl \
  zar_thatC.cpp \
  zar_thatC.h

CLEANFILES = \
  that-stamp \
  zar_thatA.cpp \
  zar_thatA.h \
  zar_thatA.inl \
  zar_thatB.cpp \
  zar_thatB.h \
  zar_thatB.inl \
  zar_thatC.cpp \
  zar_thatC.h

zar_thatA.cpp zar_thatA.h zar_thatA.inl zar_thatB.cpp zar_thatB.h zar_thatB.inl zar_thatC.cpp zar_thatC.h: that-stamp

that-stamp: $(srcdir)/that.zar
	perl ../bin/exercise.pl $(CLO_ZARFLAGS) -GA -Sc $(srcdir)/that.zar
	@touch "$@"

BUILT_SOURCES += \
  zar_thisA.cpp \
  zar_thisA.h \
  zar_thisA.inl \
  zar_thisB.cpp \
  zar_thisB.h \
  zar_thisB.inl \
  zar_thisB_T.cpp \
  zar_thisB_T.h \
  zar_thisB_T.inl \
  zar_thisC.cpp \
  zar_thisC.h

CLEANFILES += \
  this-stamp \
  zar_thisA.cpp \
  zar_thisA.h \
  zar_thisA.inl \
  zar_thisB.cpp \
  zar_thisB.h \
  zar_thisB.inl \
  zar_thisB_T.cpp \
  zar_thisB_T.h \
  zar_thisB_T.inl \
  zar_thisC.cpp \
  zar_thisC.h

zar_thisA.cpp zar_thisA.h zar_thisA.inl zar_thisB.cpp zar_thisB.h zar_thisB.inl zar_thisB_T.cpp zar_thisB_T.h zar_thisB_T.inl zar_thisC.cpp zar_thisC.h: this-stamp

this-stamp: $(srcdir)/this.zar
	perl ../bin/exercise.pl $(CLO_ZARFLAGS) -GA $(srcdir)/this.zar
	@touch "$@"

## Makefile.fco_use.am

noinst_LTLIBRARIES = libfco_use.la

libfco_use_la_CPPFLAGS = \
  -DTHAT_THERE_MACRO

libfco_use_la_SOURCES = \
  zar_thatB.cpp \
  zar_thisC.cpp

noinst_HEADERS = \
  zar_thatB.h \
  zar_thatB.inl \
  zar_thisB_T.cpp \
  zar_thisB_T.h \
  zar_thisB_T.inl \
  zar_thisC.h

## Makefile.other.am

BUILT_SOURCES += \
  other/zar_otherA.cpp \
  other/zar_otherA.h \
  other/zar_otherA.inl \
  other/zar_otherB.cpp \
  other/zar_otherB.h \
  other/zar_otherB.inl \
  other/zar_otherC.h

CLEANFILES += \
  other/other-stamp \
  other/zar_otherA.cpp \
  other/zar_otherA.h \
  other/zar_otherA.inl \
  other/zar_otherB.cpp \
  other/zar_otherB.h \
  other/zar_otherB.inl \
  other/zar_otherC.h

other/zar_otherA.cpp other/zar_otherA.h other/zar_otherA.inl other/zar_otherB.cpp other/zar_otherB.h other/zar_otherB.inl other/zar_otherC.h: other/other-stamp

other/other-stamp: $(srcdir)/other/other.poo
	perl ../bin/exercise.pl $(CLO_ZARFLAGS) -GX -Sc $(srcdir)/other/other.poo
	@touch "$@"

noinst_LTLIBRARIES += libother.la

libother_la_SOURCES = \
  other/zar_otherA.cpp \
  other/zar_otherB.cpp

noinst_HEADERS += \
  other/zar_otherA.h \
  other/zar_otherA.inl \
  other/zar_otherB.h \
  other/zar_otherB.inl \
  other/zar_otherC.h

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB

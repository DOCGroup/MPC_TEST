# Microsoft eMbedded Visual Tools Project File - Name="fco" - Package Owner=<4>
# Microsoft eMbedded Visual Tools Generated Build File, Format Version 6.02
# ** DO NOT EDIT **

# TARGTYPE "Win32 (WCE ARM) Generic Project" 0x010a
# TARGTYPE "Win32 (WCE ARMV4) Generic Project" 0x010a
# TARGTYPE "Win32 (WCE emulator) Generic Project" 0x010a
# TARGTYPE "Win32 (WCE x86) Generic Project" 0x010a

CFG=fco - Win32 (WCE ARM) Debug
!MESSAGE This is not a valid makefile. To build this project using NMAKE,
!MESSAGE run the tool that generated this project file and specify the
!MESSAGE nmake output type.  You can then use the following command:
!MESSAGE
!MESSAGE NMAKE.
!MESSAGE
!MESSAGE You can specify a configuration when running NMAKE
!MESSAGE by defining the macro CFG on the command line. For example:
!MESSAGE
!MESSAGE NMAKE CFG="fco - Win32 (WCE ARM) Debug"
!MESSAGE
!MESSAGE Possible choices for configuration are:
!MESSAGE
!MESSAGE "fco - Win32 (WCE ARM) Debug" (based on "Win32 (WCE ARM) Generic Project")
!MESSAGE "fco - Win32 (WCE ARM) Release" (based on "Win32 (WCE ARM) Generic Project")
!MESSAGE "fco - Win32 (WCE ARMV4) Debug" (based on "Win32 (WCE ARMV4) Generic Project")
!MESSAGE "fco - Win32 (WCE ARMV4) Release" (based on "Win32 (WCE ARMV4) Generic Project")
!MESSAGE "fco - Win32 (WCE emulator) Debug" (based on "Win32 (WCE emulator) Generic Project")
!MESSAGE "fco - Win32 (WCE emulator) Release" (based on "Win32 (WCE emulator) Generic Project")
!MESSAGE "fco - Win32 (WCE x86) Debug" (based on "Win32 (WCE x86) Generic Project")
!MESSAGE "fco - Win32 (WCE x86) Release" (based on "Win32 (WCE x86) Generic Project")
!MESSAGE

# Begin Project
# PROP AllowPerConfigDependencies 0
# PROP Scc_ProjName ""
# PROP Scc_LocalPath ""
# PROP ATL_Project 2

!IF  "$(CFG)" == "fco - Win32 (WCE ARM) Debug"

# PROP Use_MFC 0
# PROP Use_Debug_Libraries 1
# PROP Intermediate_Dir "Debug\fco\ARM"
# PROP CPU_ID "{D6518FFC-710F-11D3-99F2-00105A0DF099}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Target_Dir ""
RSC=rc.exe
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "$(CePlatform)" /d _DEBUG /d UNICODE /d _UNICODE /d ARM /d _ARM_ /r
CPP=clarm.exe
# ADD CPP /nologo /Ob0 /W3 /Gm /Zi /GR /Gy /Fd"Debug\fco\ARM/"  /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D UNDER_CE=$(CEVersion) /D _DEBUG /D UNICODE /D _UNICODE /D ARM /D _ARM_  /FD /Gy /c
# SUBTRACT CPP /Fr /YX
BSC32=bscmake.exe
# ADD BSC32 /nologo 

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE ARM) Release"

# PROP Use_MFC 0
# PROP Use_Debug_Libraries 0
# PROP Intermediate_Dir "Release\fco\ARM"
# PROP CPU_ID "{D6518FFC-710F-11D3-99F2-00105A0DF099}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Target_Dir ""
RSC=rc.exe
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "$(CePlatform)" /d NDEBUG /d UNICODE /d _UNICODE /d ARM /d _ARM_ /r
CPP=clarm.exe
# ADD CPP /nologo /O2 /W3 /GR  /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D UNDER_CE=$(CEVersion) /D NDEBUG /D UNICODE /D _UNICODE /D ARM /D _ARM_  /FD /Gy /c
# SUBTRACT CPP /YX
BSC32=bscmake.exe
# ADD BSC32 /nologo 

!ENDIF
!IF  "$(CFG)" == "fco - Win32 (WCE ARMV4) Debug"

# PROP Use_MFC 0
# PROP Use_Debug_Libraries 1
# PROP Intermediate_Dir "Debug\fco\ARM"
# PROP CPU_ID "{D6518FF3-710F-11D3-99F2-00105A0DF099}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Target_Dir ""
RSC=rc.exe
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "$(CePlatform)" /d _DEBUG /d UNICODE /d _UNICODE /d ARM /d _ARM_ /d ARMV4 /r
CPP=clarm.exe
# ADD CPP /nologo /Ob0 /W3 /Gm /Zi /GR /Gy /Fd"Debug\fco\ARM/" /QRxscale /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D UNDER_CE=$(CEVersion) /D _DEBUG /D UNICODE /D _UNICODE /D ARM /D _ARM_ /D ARMV4  /FD /Gy /c
# SUBTRACT CPP /Fr /YX
BSC32=bscmake.exe
# ADD BSC32 /nologo 

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE ARMV4) Release"

# PROP Use_MFC 0
# PROP Use_Debug_Libraries 0
# PROP Intermediate_Dir "Release\fco\ARM"
# PROP CPU_ID "{D6518FF3-710F-11D3-99F2-00105A0DF099}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Target_Dir ""
RSC=rc.exe
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "$(CePlatform)" /d NDEBUG /d UNICODE /d _UNICODE /d ARM /d _ARM_ /d ARMV4 /r
CPP=clarm.exe
# ADD CPP /nologo /O2 /W3 /GR /QRxscale /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D UNDER_CE=$(CEVersion) /D NDEBUG /D UNICODE /D _UNICODE /D ARM /D _ARM_ /D ARMV4  /FD /Gy /c
# SUBTRACT CPP /YX
BSC32=bscmake.exe
# ADD BSC32 /nologo 

!ENDIF
!IF  "$(CFG)" == "fco - Win32 (WCE emulator) Debug"

# PROP Use_MFC 0
# PROP Use_Debug_Libraries 1
# PROP Intermediate_Dir "Debug\fco\IX86"
# PROP CPU_ID "{D6518FF3-710F-11D3-99F2-00105A0DF099}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Target_Dir ""
RSC=rc.exe
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "$(CePlatform)" /d _DEBUG /d UNICODE /d _UNICODE /d _i386_ /d _X86_ /d x86 /r
CPP=cl.exe
# ADD CPP /nologo /Ob0 /W3 /Gm /Zi /GR /Gy /Fd"Debug\fco\IX86/"  /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D UNDER_CE=$(CEVersion) /D _DEBUG /D UNICODE /D _UNICODE /D _i386_ /D _X86_ /D x86  /FD /Gy /c
# SUBTRACT CPP /Fr /YX
BSC32=bscmake.exe
# ADD BSC32 /nologo 

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE emulator) Release"

# PROP Use_MFC 0
# PROP Use_Debug_Libraries 0
# PROP Intermediate_Dir "Release\fco\IX86"
# PROP CPU_ID "{D6518FF3-710F-11D3-99F2-00105A0DF099}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Target_Dir ""
RSC=rc.exe
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "$(CePlatform)" /d NDEBUG /d UNICODE /d _UNICODE /d _i386_ /d _X86_ /d x86 /r
CPP=cl.exe
# ADD CPP /nologo /O2 /W3 /GR  /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D UNDER_CE=$(CEVersion) /D NDEBUG /D UNICODE /D _UNICODE /D _i386_ /D _X86_ /D x86  /FD /Gy /c
# SUBTRACT CPP /YX
BSC32=bscmake.exe
# ADD BSC32 /nologo 

!ENDIF
!IF  "$(CFG)" == "fco - Win32 (WCE x86) Debug"

# PROP Use_MFC 0
# PROP Use_Debug_Libraries 1
# PROP Intermediate_Dir "Debug\fco\IX86"
# PROP CPU_ID "{D6518FF3-710F-11D3-99F2-00105A0DF099}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Target_Dir ""
RSC=rc.exe
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "$(CePlatform)" /d _DEBUG /d UNICODE /d _UNICODE /d _i386_ /d _X86_ /d x86 /r
CPP=cl.exe
# ADD CPP /nologo /Ob0 /W3 /Gm /Zi /GR /Gy /Fd"Debug\fco\IX86/"  /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D UNDER_CE=$(CEVersion) /D _DEBUG /D UNICODE /D _UNICODE /D _i386_ /D _X86_ /D x86  /FD /Gy /c
# SUBTRACT CPP /Fr /YX
BSC32=bscmake.exe
# ADD BSC32 /nologo 

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE x86) Release"

# PROP Use_MFC 0
# PROP Use_Debug_Libraries 0
# PROP Intermediate_Dir "Release\fco\IX86"
# PROP CPU_ID "{D6518FF3-710F-11D3-99F2-00105A0DF099}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Target_Dir ""
RSC=rc.exe
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "$(CePlatform)" /d NDEBUG /d UNICODE /d _UNICODE /d _i386_ /d _X86_ /d x86 /r
CPP=cl.exe
# ADD CPP /nologo /O2 /W3 /GR  /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D UNDER_CE=$(CEVersion) /D NDEBUG /D UNICODE /D _UNICODE /D _i386_ /D _X86_ /D x86  /FD /Gy /c
# SUBTRACT CPP /YX
BSC32=bscmake.exe
# ADD BSC32 /nologo 

!ENDIF


# Begin Target

# Name "fco - Win32 (WCE ARM) Debug"
# Name "fco - Win32 (WCE ARM) Release"
# Name "fco - Win32 (WCE ARMV4) Debug"
# Name "fco - Win32 (WCE ARMV4) Release"
# Name "fco - Win32 (WCE emulator) Debug"
# Name "fco - Win32 (WCE emulator) Release"
# Name "fco - Win32 (WCE x86) Debug"
# Name "fco - Win32 (WCE x86) Release"
# Begin Group "Zar Files"

# PROP Default_Filter "zar"
# Begin Source File

SOURCE="that.zar"

!IF  "$(CFG)" == "fco - Win32 (WCE ARM) Debug"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="that.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA -Sc $(InputPath) \

"zar_thatA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE ARM) Release"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="that.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA -Sc $(InputPath) \

"zar_thatA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ENDIF
!IF  "$(CFG)" == "fco - Win32 (WCE ARMV4) Debug"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="that.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA -Sc $(InputPath) \

"zar_thatA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE ARMV4) Release"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="that.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA -Sc $(InputPath) \

"zar_thatA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ENDIF
!IF  "$(CFG)" == "fco - Win32 (WCE emulator) Debug"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="that.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA -Sc $(InputPath) \

"zar_thatA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE emulator) Release"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="that.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA -Sc $(InputPath) \

"zar_thatA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ENDIF
!IF  "$(CFG)" == "fco - Win32 (WCE x86) Debug"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="that.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA -Sc $(InputPath) \

"zar_thatA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE x86) Release"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="that.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA -Sc $(InputPath) \

"zar_thatA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thatC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ENDIF

# End Source File
# Begin Source File

SOURCE="this.zar"

!IF  "$(CFG)" == "fco - Win32 (WCE ARM) Debug"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="this.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA $(InputPath) \

"zar_thisA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE ARM) Release"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="this.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA $(InputPath) \

"zar_thisA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ENDIF
!IF  "$(CFG)" == "fco - Win32 (WCE ARMV4) Debug"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="this.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA $(InputPath) \

"zar_thisA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE ARMV4) Release"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="this.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA $(InputPath) \

"zar_thisA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ENDIF
!IF  "$(CFG)" == "fco - Win32 (WCE emulator) Debug"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="this.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA $(InputPath) \

"zar_thisA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE emulator) Release"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="this.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA $(InputPath) \

"zar_thisA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ENDIF
!IF  "$(CFG)" == "fco - Win32 (WCE x86) Debug"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="this.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA $(InputPath) \

"zar_thisA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ELSEIF  "$(CFG)" == "fco - Win32 (WCE x86) Release"

# PROP Ignore_Default_Tool 1
# Begin Custom Build - Invoking perl ..\bin\exercise.pl on $(InputPath)
InputPath="this.zar"

BuildCmds= \
	perl ..\bin\exercise.pl -GA $(InputPath) \

"zar_thisA.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisA.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisB_T.inl" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)

"zar_thisC.cpp" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
   $(BuildCmds)
# End Custom Build

!ENDIF

# End Source File
# End Group
# End Target
# End Project

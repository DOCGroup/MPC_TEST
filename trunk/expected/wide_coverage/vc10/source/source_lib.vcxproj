<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectName>source_lib</ProjectName>
    <ProjectGuid>{34E4CB63-FECA-1BAD-9DA8-AE3307582455}</ProjectGuid>
    <RootNamespace>source_lib</RootNamespace>
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>NotSet</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>NotSet</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\lib\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Static_Debug\source_lib\I386\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">source_lib</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\lib\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Static_Release\source_lib\I386\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">source_lib</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\lib\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Static_Debug\source_lib\AMD64\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">source_lib</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" />
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\lib\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Static_Release\source_lib\AMD64\</IntDir>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">source_lib</TargetName>
    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|x64'">AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|x64'" />
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>Win32</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>USING_PCH;_DEBUG;WIN32;_WINDOWS;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>source_lib_pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>..\lib\source_lib.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>.;..\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>Win32</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <AdditionalIncludeDirectories>.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>USING_PCH;NDEBUG;WIN32;_WINDOWS;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>source_lib_pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>..\lib\source_lib.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>.;..\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>x64</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>USING_PCH;_DEBUG;WIN32;_WINDOWS;_CRT_NONSTDC_NO_WARNINGS;_AMD64_;_WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>source_lib_pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>_DEBUG;_WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>..\lib\source_lib.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>.;..\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>0</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <PreprocessorDefinitions>%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TargetEnvironment>x64</TargetEnvironment>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <AdditionalIncludeDirectories>.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>USING_PCH;NDEBUG;WIN32;_WINDOWS;_CRT_NONSTDC_NO_WARNINGS;_AMD64_;_WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>source_lib_pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;_WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>1033</Culture>
      <AdditionalIncludeDirectories>.;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>..\lib\source_lib.lib</OutputFile>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>.;..\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
<!--
  Though we can set TargetMachine explicitly, VC++
  can figure it out by project type. We don't need
  to set it by ourselves.
-->
<!--      <TargetMachine>0</TargetMachine>-->
    </Lib>
<!-- "postclean" was made-up by MPC for use by vs_postclean.pl.
     Check if msbuild has any support for a custom post-cleaning step
 -->
<!-- No known equivalent for DeploymentTool in vc10:
-->
  </ItemDefinitionGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="source_lib_pch.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="cre\o.le\more_names.cpp">
    </ClCompile>
    <ClCompile Include="names.cpp">
    </ClCompile>
    <ClCompile Include="qwee.cxx">
    </ClCompile>
    <ClCompile Include="TheCheat.cpp">
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="qwee_T.C">
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="cre\o.le\more_names.h" />
    <ClInclude Include="moop.hxx" />
    <ClInclude Include="names.h" />
    <ClInclude Include="TheCheat.h" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="more_names.key">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">PATH=%PATH%;..\lib&#x0D;&#x0A;if not exist cre\o.le mkdir cre\o.le&#x0D;&#x0A;..\bin\generator -o cre/o.le &quot;more_names.key&quot; &amp;&amp; echo cre\o.le\more_names.cpp and cre\o.le\more_names.h have been generated. &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;cre\o.le\more_names.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;cre\o.le\more_names.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Invoking ..\bin\generator on more_names.key</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">cre\o.le\more_names.cpp;cre\o.le\more_names.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\bin\generator.exe</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">PATH=%PATH%;..\lib&#x0D;&#x0A;if not exist cre\o.le mkdir cre\o.le&#x0D;&#x0A;..\bin\generator -o cre/o.le &quot;more_names.key&quot; &amp;&amp; echo cre\o.le\more_names.cpp and cre\o.le\more_names.h have been generated. &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;cre\o.le\more_names.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;cre\o.le\more_names.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Invoking ..\bin\generator on more_names.key</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">cre\o.le\more_names.cpp;cre\o.le\more_names.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\bin\generator.exe</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">PATH=%PATH%;..\lib&#x0D;&#x0A;if not exist cre\o.le mkdir cre\o.le&#x0D;&#x0A;..\bin\generator -o cre/o.le &quot;more_names.key&quot; &amp;&amp; echo cre\o.le\more_names.cpp and cre\o.le\more_names.h have been generated. &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;cre\o.le\more_names.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;cre\o.le\more_names.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Invoking ..\bin\generator on more_names.key</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">cre\o.le\more_names.cpp;cre\o.le\more_names.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\bin\generator.exe</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">PATH=%PATH%;..\lib&#x0D;&#x0A;if not exist cre\o.le mkdir cre\o.le&#x0D;&#x0A;..\bin\generator -o cre/o.le &quot;more_names.key&quot; &amp;&amp; echo cre\o.le\more_names.cpp and cre\o.le\more_names.h have been generated. &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;cre\o.le\more_names.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;cre\o.le\more_names.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Invoking ..\bin\generator on more_names.key</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">cre\o.le\more_names.cpp;cre\o.le\more_names.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\bin\generator.exe</AdditionalInputs>
    </CustomBuild>
    <CustomBuild Include="names.key">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">PATH=%PATH%;..\lib&#x0D;&#x0A;..\bin\generator -n names &quot;names.key&quot; &amp;&amp; echo names.cpp and names.h have been generated. &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;names.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;names.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Invoking ..\bin\generator on names.key</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">names.cpp;names.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\bin\generator.exe;something</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">PATH=%PATH%;..\lib&#x0D;&#x0A;..\bin\generator -n names &quot;names.key&quot; &amp;&amp; echo names.cpp and names.h have been generated. &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;names.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;names.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Invoking ..\bin\generator on names.key</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">names.cpp;names.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\bin\generator.exe;something</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">PATH=%PATH%;..\lib&#x0D;&#x0A;..\bin\generator -n names &quot;names.key&quot; &amp;&amp; echo names.cpp and names.h have been generated. &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;names.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;names.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Invoking ..\bin\generator on names.key</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">names.cpp;names.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\bin\generator.exe;something</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">PATH=%PATH%;..\lib&#x0D;&#x0A;..\bin\generator -n names &quot;names.key&quot; &amp;&amp; echo names.cpp and names.h have been generated. &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;names.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;names.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Invoking ..\bin\generator on names.key</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">names.cpp;names.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\bin\generator.exe;something</AdditionalInputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="TheCheat.r">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">perl ..\bin\cppgen.pl  &quot;TheCheat.r&quot; -o &quot;TheCheat.cpp&quot; &quot;TheCheat.h&quot; &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;TheCheat.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;TheCheat.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Invoking perl ..\bin\cppgen.pl on TheCheat.r</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">TheCheat.cpp;TheCheat.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\bin\cppgen.pl</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">perl ..\bin\cppgen.pl  &quot;TheCheat.r&quot; -o &quot;TheCheat.cpp&quot; &quot;TheCheat.h&quot; &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;TheCheat.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;TheCheat.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Invoking perl ..\bin\cppgen.pl on TheCheat.r</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">TheCheat.cpp;TheCheat.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\bin\cppgen.pl</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">perl ..\bin\cppgen.pl  &quot;TheCheat.r&quot; -o &quot;TheCheat.cpp&quot; &quot;TheCheat.h&quot; &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;TheCheat.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;TheCheat.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Invoking perl ..\bin\cppgen.pl on TheCheat.r</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">TheCheat.cpp;TheCheat.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\bin\cppgen.pl</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">perl ..\bin\cppgen.pl  &quot;TheCheat.r&quot; -o &quot;TheCheat.cpp&quot; &quot;TheCheat.h&quot; &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;TheCheat.cpp&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;TheCheat.cpp&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Invoking perl ..\bin\cppgen.pl on TheCheat.r</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">TheCheat.cpp;TheCheat.h</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\bin\cppgen.pl</AdditionalInputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="mondo\all.mondo">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">if not exist . mkdir .&#x0D;&#x0A;perl ..\mondo\mondo.pl -fake &quot;mondo\all.mondo&quot; &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;.\qwee.cxx&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;.\qwee.cxx&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Invoking perl ..\mondo\mondo.pl on mondo\all.mondo</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">.\bar.txt;.\moop.hxx;.\qwee.cxx;.\qwee_T.C;.\weer.inl</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">..\mondo\mondo.pl;..\mondo\modules\ReaderGen.pm</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">if not exist . mkdir .&#x0D;&#x0A;perl ..\mondo\mondo.pl -fake &quot;mondo\all.mondo&quot; &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;.\qwee.cxx&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;.\qwee.cxx&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Invoking perl ..\mondo\mondo.pl on mondo\all.mondo</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">.\bar.txt;.\moop.hxx;.\qwee.cxx;.\qwee_T.C;.\weer.inl</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">..\mondo\mondo.pl;..\mondo\modules\ReaderGen.pm</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">if not exist . mkdir .&#x0D;&#x0A;perl ..\mondo\mondo.pl -fake &quot;mondo\all.mondo&quot; &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;.\qwee.cxx&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;.\qwee.cxx&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Invoking perl ..\mondo\mondo.pl on mondo\all.mondo</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.\bar.txt;.\moop.hxx;.\qwee.cxx;.\qwee_T.C;.\weer.inl</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\mondo\mondo.pl;..\mondo\modules\ReaderGen.pm</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">if not exist . mkdir .&#x0D;&#x0A;perl ..\mondo\mondo.pl -fake &quot;mondo\all.mondo&quot; &amp;&amp; echo #include &quot;source_lib_pch.h&quot; &gt; temporary.src &amp;&amp; type &quot;.\qwee.cxx&quot; &gt;&gt; temporary.src &amp;&amp; move /y temporary.src &quot;.\qwee.cxx&quot;</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Invoking perl ..\mondo\mondo.pl on mondo\all.mondo</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.\bar.txt;.\moop.hxx;.\qwee.cxx;.\qwee_T.C;.\weer.inl</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\mondo\mondo.pl;..\mondo\modules\ReaderGen.pm</AdditionalInputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="weer.inl" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="bar.txt">
      <FileType>Document</FileType>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</ExcludedFromBuild>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>

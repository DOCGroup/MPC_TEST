#----------------------------------------------------------------------------
#       Borland Makefile
#
# This file was automatically generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
#----------------------------------------------------------------------------
!ifdef DEBUG
OCFLAGS      = -v -y -Od -vi- -k -D_DEBUG
CFG_DIR      = Static_Debug\\
LIBMODIFIER  = 
EXEMODIFIER  = 
POSTLINKRM   = .tds
!else
!ifdef RELEASE
OCFLAGS      = -O2 -DNDEBUG
CFG_DIR      = Static_Release\\
LIBMODIFIER  = 
EXEMODIFIER  = 
POSTLINKRM   = .tds
!else
!error You must define one of these valid configurations: Debug Release
!endif
!endif

!ifdef UNICODE
UC_CFLAGS    = -WU
UNICODE_DIR  = Unicode\\
UC_MAIN      = w
ULIBMODIFIER = u
UEXEMODIFIER = u
!endif

!ifdef CODEGUARD
CG_CFLAGS = -vG
CG_LIB    = cg32.lib
!endif

VCL_CFLAGS     = -D_NO_VCL
STARTUP_LETTER = d
STARTUP_OBJ    = c0$(STARTUP_LETTER)32$(UC_MAIN)$(OBJ_EXT)

OBJ_EXT      = .obj
DLL_EXT      = .dll
LIB_EXT      = .lib
EXE_EXT      = .exe
CC           = bcc32
RC           = brcc32
LINK         = ilink32
TLIB         = tlib
THREADFLAGS  = -tWM
DLLFLAGS     = -Tpd -Gi -x -Gn -w-dup
LIBFLAGS     = /C
EXEFLAGS     = -Tpe -x -Gn
WARNFLAGS    = -w-rvl -w-rch -w-ccc -w-obs -w-aus -w-pia -w-inl
CCFLAGS      = -q

INTERMEDIATE = $(CFG_DIR)$(UNICODE_DIR)source_lib
NAME         = source_lib$(LIBMODIFIER)$(ULIBMODIFIER)
CPPDIR       = .;cre\o.le
RESDIR       = .

OBJFILES = \
           "$(INTERMEDIATE)\cre\o.le\more_names$(OBJ_EXT)" \
           "$(INTERMEDIATE)\names$(OBJ_EXT)" \
           "$(INTERMEDIATE)\qwee$(OBJ_EXT)" \
           "$(INTERMEDIATE)\TheCheat$(OBJ_EXT)"

LFLAGS   = \
           -v \
           -L"." -j"." \
           -L"..\lib" -j"..\lib"

LIBFILES = \
           $(CG_LIB) import32.lib cw32mti.lib ws2_32.lib

# Borland precompiled headers can choke on some header files.
# Set NO_USE_PCH if you do not want to use precompiled headers.
!ifndef NO_USE_PCH
PCH_CFLAGS = \
             -DUSING_PCH \
             -H=$(INTERMEDIATE)\source_lib.csm -Hh=source_lib_pch.h
!endif

CFLAGS = \
         -a8 \
         -DWIN32 \
         -D_WINDOWS \
         -I"." \
         $(PCH_CFLAGS) \
         $(VCL_CFLAGS)

OUTPUTDIR = ..\lib\\
all: $(OUTPUTDIR)$(NAME)$(LIB_EXT)

$(OUTPUTDIR)$(NAME)$(LIB_EXT): $(OBJFILES)
	@if not exist "$(OUTPUTDIR)" mkdir "$(OUTPUTDIR)"
	$(TLIB) $(LIBFLAGS) $(OUTPUTDIR)$(NAME)$(LIB_EXT) @&&!
+ $(**: = &^
+ )
!

GENERATED_DIRTY = cre\o.le\more_names.cpp cre\o.le\more_names.h names.cpp names.h TheCheat.cpp TheCheat.h .\bar.txt .\moop.hxx .\qwee.cxx .\qwee_T.C .\weer.inl
PATH = $(PATH);..\lib
cre\o.le\more_names.cpp cre\o.le\more_names.h: more_names.key
        @if not exist "cre\o.le" mkdir "cre\o.le"
	..\bin\generator -o cre/o.le more_names.key
	echo cre\o.le\more_names.cpp and cre\o.le\more_names.h have been generated.
	@echo \#include "source_lib_pch.h" > temporary.src
	@type cre\o.le\more_names.cpp >> temporary.src
	@move /y temporary.src cre\o.le\more_names.cpp

names.cpp names.h: names.key something
	..\bin\generator -n names names.key
	echo names.cpp and names.h have been generated.
	@echo \#include "source_lib_pch.h" > temporary.src
	@type names.cpp >> temporary.src
	@move /y temporary.src names.cpp

TheCheat.cpp TheCheat.h: TheCheat.r
	perl ..\bin\cppgen.pl  TheCheat.r -o $@
	@echo \#include "source_lib_pch.h" > temporary.src
	@type TheCheat.cpp >> temporary.src
	@move /y temporary.src TheCheat.cpp

.\bar.txt .\moop.hxx .\qwee.cxx .\qwee_T.C .\weer.inl: mondo\all.mondo
        @if not exist "." mkdir "."
	perl ..\mondo\mondo.pl -fake mondo\all.mondo
	@echo \#include "source_lib_pch.h" > temporary.src
	@type .\qwee.cxx >> temporary.src
	@move /y temporary.src .\qwee.cxx

$(OBJFILES): $(GENERATED_DIRTY)

generated: $(GENERATED_DIRTY)
	@-rem

.path$(OBJ_EXT) = $(INTERMEDIATE)

.path.cpp = $(CPPDIR)
.cpp$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.cxx = $(CPPDIR)
.cxx$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.cc = $(CPPDIR)
.cc$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.C = $(CPPDIR)
.C$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

.path.c = $(CPPDIR)
.c$(OBJ_EXT):
	@if not exist "$(INTERMEDIATE)" mkdir "$(INTERMEDIATE)"
        $(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) $<

"$(INTERMEDIATE)\cre\o.le\more_names$(OBJ_EXT)":
	@if not exist "$(INTERMEDIATE)\cre\o.le\" mkdir "$(INTERMEDIATE)\cre\o.le\"
	$(CC) $(OCFLAGS) $(CG_CFLAGS) $(UC_CFLAGS) $(THREADFLAGS) $(CCFLAGS) $(CFLAGS) $(WARNFLAGS) -c -n$(@D) cre\o.le\more_names.cpp

clean:
        @if exist "$(INTERMEDIATE)" rmdir /s/q $(INTERMEDIATE)

realclean: clean
        @del "cre\o.le\more_names.cpp" 2>NUL
        @del "cre\o.le\more_names.h" 2>NUL
        @del "names.cpp" 2>NUL
        @del "names.h" 2>NUL
        @del "TheCheat.cpp" 2>NUL
        @del "TheCheat.h" 2>NUL
        @del ".\bar.txt" 2>NUL
        @del ".\moop.hxx" 2>NUL
        @del ".\qwee.cxx" 2>NUL
        @del ".\qwee_T.C" 2>NUL
        @del ".\weer.inl" 2>NUL
        @del "$(OUTPUTDIR)$(NAME)$(LIB_EXT)" del "$(OUTPUTDIR)$(NAME)$(LIB_EXT)" 2>NUL
        @del "$(OUTPUTDIR)$(NAME)$(POSTLINKRM)" 2>NUL


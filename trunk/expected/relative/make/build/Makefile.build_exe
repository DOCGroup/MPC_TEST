#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CXX           = g++
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -D_REENTRANT -I"."
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"."
CCC           = $(CXX)
MAKEFILE      = Makefile.build_exe
DEPENDENCIES  = .depend.$(MAKEFILE)
BTARGETDIR    = ./
BIN           = $(BTARGETDIR)other$(EXEEXT)
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
EXEEXT        = 
LIBPREFIX     = lib
LDLIBS        = -ldl -lpthread $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so)))))
OBJS          = ../src/foo$(OBJEXT) bar$(OBJEXT) lower/bar$(OBJEXT) other$(OBJEXT)
GENFLAGS      = -O
SRC           = ../src/foo.cpp bar.cpp lower/bar.cpp other.cpp
LINK.cc       = $(LD) $(LDFLAGS)
EXPORTFLAGS   = 

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(BIN)

$(BTARGETDIR):
	@$(MKDIR) "$@"

$(BIN): $(BTARGETDIR) $(OBJS)
	$(LINK.cc) $(OBJS) $(LDLIBS) $(OUTPUT_OPTION)

generated: $(GENERATED_DIRTY)
	@-:

../src/foo$(OBJEXT): ../src/foo.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) ../src/foo.cpp

bar$(OBJEXT): bar.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) bar.cpp

lower/bar$(OBJEXT): lower/bar.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) lower/bar.cpp

other$(OBJEXT): other.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) other.cpp

clean:
	-$(RM) $(OBJS)

realclean: clean
	-$(RM) $(BIN)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------

$(DEPENDENCIES):
	@touch $(DEPENDENCIES)

depend:
	-makedepend -Y $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

include $(DEPENDENCIES)
